name: Scala CI

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        jvm: ["17.0.12", "21"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.jvm }}
          version: "latest"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache packages
        uses: coursier/cache-action@v6
        id: coursier-cache

      - name: Check Formatting
        run: ./mill mill.scalalib.scalafmt.ScalafmtModule/checkFormatAll __.sources
        if: startsWith(matrix.jvm, '17')

      - name: Run tests for all versions
        run: ./mill Alias/run testall

  # code-coverage:
  #   needs: [test]
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v5
  #     with:
  #       fetch-depth: 0

  #   - name: Setup Java
  #     uses: actions/setup-java@v3
  #     with:
  #       distribution: 'temurin'
  #       java-version: 17

  #   - name: Cache packages
  #     uses: coursier/cache-action@v6
  #     id: coursier-cache

  #   - name: Run code coverage
  #     run: ./mill Alias/run coverage

  #   - name: Upload coverage to Codecov
  #     uses: codecov/codecov-action@v3

  publish-snapshot:
    needs: [test]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "17"
          version: "latest"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache packages
        uses: coursier/cache-action@v6
        id: coursier-cache

      - name: Publish
        run: ./mill mill.scalalib.SonatypeCentralPublishModule/
        env:
          MILL_SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MILL_SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MILL_PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          MILL_PGP_SECRET_BASE64: ${{ secrets.PGP_SECRET }}

  publish-release:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    if: contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "17"
          version: "latest"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache packages
        uses: coursier/cache-action@v6
        id: coursier-cache

      - name: Publish
        run: ./mill mill.scalalib.SonatypeCentralPublishModule/
        env:
          MILL_SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MILL_SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MILL_PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          MILL_PGP_SECRET_BASE64: ${{ secrets.PGP_SECRET }}

      - name: Publish release from tag
        uses: ghalactic/github-release-from-tag@v5
        with:
          generateReleaseNotes: "true"
          prerelease: "false"
          draft: "false"
